{"version":3,"sources":["components/Square.tsx","Utils/chooseRandomPlayer.ts","pages/Board.tsx","Utils/calculateWinner.ts","App.tsx","index.tsx"],"names":["Square","value","onClick","taken","className","players","chooseRandomPlayer","Math","floor","random","length","Board","useState","Array","fill","board","setBoard","currentPlayer","setCurrentPlayer","player","setPlayer","winner","squares","boardLineWinnings","i","a","b","c","calculateWinner","handleClick","useCallback","tempBoard","prevState","useEffect","move","every","map","square","App","ReactDOM","render","StrictMode","basename","process","document","getElementById"],"mappings":"mPAoBeA,EAZA,SAAC,GAA0D,IAAxDC,EAAuD,EAAvDA,MAAOC,EAAgD,EAAhDA,QAASC,EAAuC,EAAvCA,MAChC,OACE,qBACEC,UAAS,iBAAsB,MAAVH,EAAgB,QAAU,QAAtC,YACPE,EAAQ,GAAK,QAEfD,QAASA,EAJX,SAKE,mBAAGE,UAAU,QAAb,SAAsBH,OCftBI,EAAU,CAAC,IAAK,KAETC,EAAqB,WAC9B,OAAOD,EAAQE,KAAKC,MAAMD,KAAKE,SAAWJ,EAAQK,UCwEvCC,EAtED,WACZ,MAA0BC,mBAASC,MAAM,GAAGC,KAAK,OAAjD,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA0CJ,mBAAS,KAAnD,mBAAOK,EAAP,KAAsBC,EAAtB,KAEA,EAA4BN,mBAASN,KAArC,mBAAOa,EAAP,KAAeC,EAAf,KAEMC,ECXuB,SAACC,GAW/B,IAVA,IAAMC,EAAoB,CACzB,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAECC,EAAI,EAAGA,EAAID,EAAkBb,OAAQc,IAAK,CAClD,kBAAkBD,EAAkBC,GAApC,GAAOC,EAAP,KAAUC,EAAV,KAAaC,EAAb,KACA,GAAIL,EAAQG,IAAMH,EAAQG,KAAOH,EAAQI,IAAMJ,EAAQG,KAAOH,EAAQK,GACrE,OAAOL,EAAQG,GAGjB,OAAO,KDNSG,CAAgBb,GAEzBc,EAAcC,uBAClB,SAACN,GACC,IAAMO,EAAS,YAAOhB,GAElBM,GAAUU,EAAUP,KAExBO,EAAUP,GAAKP,EACfD,EAASe,GACTb,GAAiB,SAACc,GAAD,MAA8B,MAAdA,EAAoB,IAAM,UAE7D,CAACjB,EAAOE,EAAeI,IAoBzB,OAZAY,qBAAU,WACR,GAAIhB,IAAkBE,EAAQ,CAG5B,IAFA,IAAIe,EAAO3B,KAAKC,MAAMD,KAAKE,SAAWM,EAAML,QAErCK,EAAMmB,KAAUnB,EAAMoB,OAAM,SAAClC,GAAD,OAAqB,OAAVA,MAC5CiC,EAAO3B,KAAKC,MAAMD,KAAKE,SAAWM,EAAML,QAG1CmB,EAAYK,MAEb,CAACjB,EAAeE,EAAQJ,EAAOc,IAGhC,qCACE,sBAAKzB,UAAU,kBAAf,UACE,oDADF,IACgC,cAAC,EAAD,CAAQH,MAAOkB,EAAQhB,OAAK,OAE1DkB,EAMA,sBAAKjB,UAAU,kBAAf,UACE,6CADF,IACyB,cAAC,EAAD,CAAQH,MAAOoB,EAAQlB,OAAK,OANrD,sBAAKC,UAAU,kBAAf,UACE,wCADF,IACoB,cAAC,EAAD,CAAQH,MAAOgB,EAAed,OAAK,IACrD,4CAOJ,qBAAKC,UAAU,QAAf,SACGW,EAAMqB,KAAI,SAACC,EAAQb,GAAT,OACT,cAAC,EAAD,CAEEvB,MAAOoC,EACPnC,QAAS,kBAAM2B,EAAYL,IAC3BrB,MAAiB,MAAVkC,GAHFb,QAOX,qBAAKpB,UAAU,cAAcF,QA1Cd,WACjBc,EAASH,MAAM,GAAGC,KAAK,OACvBM,EAAUd,MAwCR,4BExDSgC,MARf,WACE,OACE,qBAAKlC,UAAU,MAAf,SACE,cAAC,EAAD,O,QCDNmC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAeC,SAAUC,mBAAzB,SACE,cAAC,EAAD,QAGJC,SAASC,eAAe,W","file":"static/js/main.0e9a0252.chunk.js","sourcesContent":["import React, { ReactElement } from 'react';\n\ninterface SquareProps {\n  value: string | null;\n  onClick?: (e: unknown) => void;\n  taken: boolean;\n}\n\nconst Square = ({ value, onClick, taken }: SquareProps): ReactElement => {\n  return (\n    <div\n      className={`Square ${value === 'X' ? 'xNext' : 'oNext'} ${\n        taken ? '' : 'free'\n      }`}\n      onClick={onClick}>\n      <p className=\"value\">{value}</p>\n    </div>\n  );\n};\n\nexport default Square;\n","const players = ['X', 'O'];\n\nexport const chooseRandomPlayer = (): string => {\n    return players[Math.floor(Math.random() * players.length)];\n  };\n  ","import React, { ReactElement, useCallback, useEffect, useState } from 'react';\nimport Square from '../components/Square';\nimport { calculateWinner } from '../Utils/calculateWinner';\nimport { chooseRandomPlayer } from '../Utils/chooseRandomPlayer';\n\nconst Board = (): ReactElement => {\n  const [board, setBoard] = useState(Array(9).fill(null));\n  const [currentPlayer, setCurrentPlayer] = useState('X');\n\n  const [player, setPlayer] = useState(chooseRandomPlayer());\n\n  const winner = calculateWinner(board);\n\n  const handleClick = useCallback(\n    (i: number): void => {\n      const tempBoard = [...board];\n      // If user click an occupied square or if game is won, return\n      if (winner || tempBoard[i]) return;\n      // Put an X or an O in the clicked square\n      tempBoard[i] = currentPlayer;\n      setBoard(tempBoard);\n      setCurrentPlayer((prevState) => (prevState === 'X' ? 'O' : 'X'));\n    },\n    [board, currentPlayer, winner]\n  );\n\n  const setupBoard = (): void => {\n    setBoard(Array(9).fill(null));\n    setPlayer(chooseRandomPlayer());\n  };\n\n  useEffect(() => {\n    if (currentPlayer !== player) {\n      let move = Math.floor(Math.random() * board.length);\n\n      while (board[move] && !board.every((value) => value !== null)) {\n        move = Math.floor(Math.random() * board.length);\n      }\n\n      handleClick(move);\n    }\n  }, [currentPlayer, player, board, handleClick]);\n\n  return (\n    <>\n      <div className=\"playerContainer\">\n        <span>You're player is</span> <Square value={player} taken />\n      </div>\n      {!winner ? (\n        <div className=\"playerContainer\">\n          <span>It's</span> <Square value={currentPlayer} taken />\n          <span>turn!</span>\n        </div>\n      ) : (\n        <div className=\"playerContainer\">\n          <span>Winner is</span> <Square value={winner} taken />\n        </div>\n      )}\n      <div className=\"Board\">\n        {board.map((square, i) => (\n          <Square\n            key={i}\n            value={square}\n            onClick={() => handleClick(i)}\n            taken={square != null}\n          />\n        ))}\n      </div>\n      <div className=\"resetButton\" onClick={setupBoard}>\n        RESET GAME\n      </div>\n    </>\n  );\n};\n\nexport default Board;\n","export const calculateWinner = (squares: string[]): string | null => {\n\tconst boardLineWinnings = [\n\t\t[0, 1, 2],\n\t\t[3, 4, 5],\n\t\t[6, 7, 8],\n\t\t[0, 3, 6],\n\t\t[1, 4, 7],\n\t\t[2, 5, 8],\n\t\t[0, 4, 8],\n\t\t[2, 4, 6],\n\t];\n\tfor (let i = 0; i < boardLineWinnings.length; i++) {\n\t\tconst [a, b, c] = boardLineWinnings[i];\n\t\tif (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n\t\t\treturn squares[a];\n\t\t}\n\t}\n\treturn null;\n}","import React from 'react';\nimport './App.css';\nimport Board from './pages/Board';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Board />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}